// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIssueAlert(args: GetIssueAlertArgs, opts?: pulumi.InvokeOptions): Promise<GetIssueAlertResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("sentry:index/getIssueAlert:getIssueAlert", {
        "internalId": args.internalId,
        "organization": args.organization,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getIssueAlert.
 */
export interface GetIssueAlertArgs {
    internalId: string;
    organization: string;
    project: string;
}

/**
 * A collection of values returned by getIssueAlert.
 */
export interface GetIssueAlertResult {
    readonly actionMatch: string;
    readonly actions: {[key: string]: any}[];
    readonly conditions: {[key: string]: any}[];
    readonly environment: string;
    readonly filterMatch: string;
    readonly filters: {[key: string]: any}[];
    readonly frequency: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly internalId: string;
    readonly name: string;
    readonly organization: string;
    readonly project: string;
}

export function getIssueAlertOutput(args: GetIssueAlertOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIssueAlertResult> {
    return pulumi.output(args).apply(a => getIssueAlert(a, opts))
}

/**
 * A collection of arguments for invoking getIssueAlert.
 */
export interface GetIssueAlertOutputArgs {
    internalId: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
