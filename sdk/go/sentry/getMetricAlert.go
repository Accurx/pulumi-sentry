// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMetricAlert(ctx *pulumi.Context, args *LookupMetricAlertArgs, opts ...pulumi.InvokeOption) (*LookupMetricAlertResult, error) {
	var rv LookupMetricAlertResult
	err := ctx.Invoke("sentry:index/getMetricAlert:getMetricAlert", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetricAlert.
type LookupMetricAlertArgs struct {
	InternalId   string `pulumi:"internalId"`
	Organization string `pulumi:"organization"`
	Project      string `pulumi:"project"`
}

// A collection of values returned by getMetricAlert.
type LookupMetricAlertResult struct {
	Aggregate   string `pulumi:"aggregate"`
	Dataset     string `pulumi:"dataset"`
	Environment string `pulumi:"environment"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                  `pulumi:"id"`
	InternalId       string                  `pulumi:"internalId"`
	Name             string                  `pulumi:"name"`
	Organization     string                  `pulumi:"organization"`
	Owner            string                  `pulumi:"owner"`
	Project          string                  `pulumi:"project"`
	Query            string                  `pulumi:"query"`
	ResolveThreshold float64                 `pulumi:"resolveThreshold"`
	ThresholdType    int                     `pulumi:"thresholdType"`
	TimeWindow       float64                 `pulumi:"timeWindow"`
	Triggers         []GetMetricAlertTrigger `pulumi:"triggers"`
}

func LookupMetricAlertOutput(ctx *pulumi.Context, args LookupMetricAlertOutputArgs, opts ...pulumi.InvokeOption) LookupMetricAlertResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMetricAlertResult, error) {
			args := v.(LookupMetricAlertArgs)
			r, err := LookupMetricAlert(ctx, &args, opts...)
			var s LookupMetricAlertResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMetricAlertResultOutput)
}

// A collection of arguments for invoking getMetricAlert.
type LookupMetricAlertOutputArgs struct {
	InternalId   pulumi.StringInput `pulumi:"internalId"`
	Organization pulumi.StringInput `pulumi:"organization"`
	Project      pulumi.StringInput `pulumi:"project"`
}

func (LookupMetricAlertOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricAlertArgs)(nil)).Elem()
}

// A collection of values returned by getMetricAlert.
type LookupMetricAlertResultOutput struct{ *pulumi.OutputState }

func (LookupMetricAlertResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMetricAlertResult)(nil)).Elem()
}

func (o LookupMetricAlertResultOutput) ToLookupMetricAlertResultOutput() LookupMetricAlertResultOutput {
	return o
}

func (o LookupMetricAlertResultOutput) ToLookupMetricAlertResultOutputWithContext(ctx context.Context) LookupMetricAlertResultOutput {
	return o
}

func (o LookupMetricAlertResultOutput) Aggregate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Aggregate }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Dataset }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Environment }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMetricAlertResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.InternalId }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Organization }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) string { return v.Query }).(pulumi.StringOutput)
}

func (o LookupMetricAlertResultOutput) ResolveThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMetricAlertResult) float64 { return v.ResolveThreshold }).(pulumi.Float64Output)
}

func (o LookupMetricAlertResultOutput) ThresholdType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) int { return v.ThresholdType }).(pulumi.IntOutput)
}

func (o LookupMetricAlertResultOutput) TimeWindow() pulumi.Float64Output {
	return o.ApplyT(func(v LookupMetricAlertResult) float64 { return v.TimeWindow }).(pulumi.Float64Output)
}

func (o LookupMetricAlertResultOutput) Triggers() GetMetricAlertTriggerArrayOutput {
	return o.ApplyT(func(v LookupMetricAlertResult) []GetMetricAlertTrigger { return v.Triggers }).(GetMetricAlertTriggerArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMetricAlertResultOutput{})
}
