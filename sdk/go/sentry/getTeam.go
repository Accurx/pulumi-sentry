// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupTeam(ctx *pulumi.Context, args *LookupTeamArgs, opts ...pulumi.InvokeOption) (*LookupTeamResult, error) {
	var rv LookupTeamResult
	err := ctx.Invoke("sentry:index/getTeam:getTeam", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeam.
type LookupTeamArgs struct {
	Organization string `pulumi:"organization"`
	Slug         string `pulumi:"slug"`
}

// A collection of values returned by getTeam.
type LookupTeamResult struct {
	HasAccess bool `pulumi:"hasAccess"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	InternalId   string `pulumi:"internalId"`
	IsMember     bool   `pulumi:"isMember"`
	IsPending    bool   `pulumi:"isPending"`
	Name         string `pulumi:"name"`
	Organization string `pulumi:"organization"`
	Slug         string `pulumi:"slug"`
}

func LookupTeamOutput(ctx *pulumi.Context, args LookupTeamOutputArgs, opts ...pulumi.InvokeOption) LookupTeamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTeamResult, error) {
			args := v.(LookupTeamArgs)
			r, err := LookupTeam(ctx, &args, opts...)
			var s LookupTeamResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTeamResultOutput)
}

// A collection of arguments for invoking getTeam.
type LookupTeamOutputArgs struct {
	Organization pulumi.StringInput `pulumi:"organization"`
	Slug         pulumi.StringInput `pulumi:"slug"`
}

func (LookupTeamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamArgs)(nil)).Elem()
}

// A collection of values returned by getTeam.
type LookupTeamResultOutput struct{ *pulumi.OutputState }

func (LookupTeamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTeamResult)(nil)).Elem()
}

func (o LookupTeamResultOutput) ToLookupTeamResultOutput() LookupTeamResultOutput {
	return o
}

func (o LookupTeamResultOutput) ToLookupTeamResultOutputWithContext(ctx context.Context) LookupTeamResultOutput {
	return o
}

func (o LookupTeamResultOutput) HasAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTeamResult) bool { return v.HasAccess }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTeamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTeamResultOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.InternalId }).(pulumi.StringOutput)
}

func (o LookupTeamResultOutput) IsMember() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTeamResult) bool { return v.IsMember }).(pulumi.BoolOutput)
}

func (o LookupTeamResultOutput) IsPending() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTeamResult) bool { return v.IsPending }).(pulumi.BoolOutput)
}

func (o LookupTeamResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupTeamResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.Organization }).(pulumi.StringOutput)
}

func (o LookupTeamResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTeamResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTeamResultOutput{})
}
