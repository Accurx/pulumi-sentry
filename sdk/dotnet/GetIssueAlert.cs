// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sentry
{
    public static class GetIssueAlert
    {
        public static Task<GetIssueAlertResult> InvokeAsync(GetIssueAlertArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIssueAlertResult>("sentry:index/getIssueAlert:getIssueAlert", args ?? new GetIssueAlertArgs(), options.WithDefaults());

        public static Output<GetIssueAlertResult> Invoke(GetIssueAlertInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIssueAlertResult>("sentry:index/getIssueAlert:getIssueAlert", args ?? new GetIssueAlertInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIssueAlertArgs : global::Pulumi.InvokeArgs
    {
        [Input("internalId", required: true)]
        public string InternalId { get; set; } = null!;

        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetIssueAlertArgs()
        {
        }
        public static new GetIssueAlertArgs Empty => new GetIssueAlertArgs();
    }

    public sealed class GetIssueAlertInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("internalId", required: true)]
        public Input<string> InternalId { get; set; } = null!;

        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetIssueAlertInvokeArgs()
        {
        }
        public static new GetIssueAlertInvokeArgs Empty => new GetIssueAlertInvokeArgs();
    }


    [OutputType]
    public sealed class GetIssueAlertResult
    {
        public readonly string ActionMatch;
        public readonly ImmutableArray<ImmutableDictionary<string, object>> Actions;
        public readonly ImmutableArray<ImmutableDictionary<string, object>> Conditions;
        public readonly string Environment;
        public readonly string FilterMatch;
        public readonly ImmutableArray<ImmutableDictionary<string, object>> Filters;
        public readonly int Frequency;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InternalId;
        public readonly string Name;
        public readonly string Organization;
        public readonly string Project;

        [OutputConstructor]
        private GetIssueAlertResult(
            string actionMatch,

            ImmutableArray<ImmutableDictionary<string, object>> actions,

            ImmutableArray<ImmutableDictionary<string, object>> conditions,

            string environment,

            string filterMatch,

            ImmutableArray<ImmutableDictionary<string, object>> filters,

            int frequency,

            string id,

            string internalId,

            string name,

            string organization,

            string project)
        {
            ActionMatch = actionMatch;
            Actions = actions;
            Conditions = conditions;
            Environment = environment;
            FilterMatch = filterMatch;
            Filters = filters;
            Frequency = frequency;
            Id = id;
            InternalId = internalId;
            Name = name;
            Organization = organization;
            Project = project;
        }
    }
}
